{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Button.svelte",
    "../Grid.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Button from \"./Button.svelte\";\n  import Grid from \"./Grid.svelte\";\n  import ByteArray from \"./ByteArray.svelte\";\n\n  $: grid = [\n    [false, false, false, true, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false]\n  ];\n\n  $: byteArray = grid.map(item => {\n    const binaryNumber = item.map(value => +value).join(\"\");\n    const hexadecimalNumber = parseInt(`${binaryNumber}`, 2).toString(16);\n    return `0x${hexadecimalNumber}`;\n  });\n\n  function handleClick (evt) {\n    console.log('hi', evt)\n  }\n\n  function handleCheckBoxClick (evt) {\n    const {row, box} = evt.detail\n    let newArray = grid.map(function(arr) {\n    return arr.slice();\n    });\n    let removed = newArray[row].splice(box, 1, !newArray[row][box])\n    console.log(newArray, removed)\n    grid = newArray;\n\n  }\n</script>\n\n<style>\n  main {\n    font-family: sans-serif;\n    text-align: center;\n  }\n</style>\n\n<main>\n\t<h1>Grid of 0 or 1s</h1>\n\t\n  <Grid grid={grid} on:boxclick={handleCheckBoxClick}/>\n  <Button on:reset={handleClick}/>\n  {grid}\n  <ByteArray byteArray={byteArray}/>\n</main>",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  function handleClick() {\n\t\tdispatch('reset');\n\t}\n</script>\n\n<button on:click={handleClick}>\n  Reset\n</button>\n\n<style>\n  button {\n    background: #ff3e00;\n    color: white;\n    border: none;\n    padding: 8px 12px;\n    border-radius: 1px;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n  export let grid;\n\n  const dispatch = createEventDispatcher();\n  \n  function handleClick(msg) {\n    dispatch('boxclick', msg)\n  }\n</script>\n\n<style>\n  .panel {\n    line-height: 0;\n    padding: 1rem;\n    background-color: #313131;\n  }\n  input[type=\"checkbox\"] {\n    -webkit-appearance: none;\n    appearance: none;\n    background-color: #fff;\n    margin: 0 0.1rem 0.1rem 0;\n    font: inherit;\n    color: currentColor;\n    width: 1.2rem;\n    height: 1.2rem;\n    border: 1px solid currentColor;\n    border-radius: 50%;\n    transform: translateY(-0.075em);\n  }\n\n  input[type=\"checkbox\"]:last-of-type {\n    margin-right: 0;\n  }\n\n  input[type=\"checkbox\"]:checked {\n    background-color: red;\n  }\n</style>\n<main>\n<!-- checkboxes -->\n<div >\n  Inside Grid component: {grid}\n  <div class=\"panel\">\n  {#each grid as row, i}\n    <div>\n      {#each row as a, j}\n        <input type=checkbox bind:checked={a} on:click={() => handleClick({row:i,box:j})}>\n      {/each}\n    </div>\n  {/each}\n</div>\n</div>\n\n<!-- values -->\n<!-- <div>\n  {#each grid as g}\n    <div>\n      {#each g as a}\n        {+a}\n      {/each}\n    </div>\n  {/each}\n</div> -->\n</main>"
  ],
  "names": [],
  "mappings": "AAuCE,IAAI,eAAC,CAAC,AACJ,WAAW,CAAE,UAAU,CACvB,UAAU,CAAE,MAAM,AACpB,CAAC;AC3BD,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,aAAa,CAAE,GAAG,AACpB,CAAC;ACTD,MAAM,eAAC,CAAC,AACN,WAAW,CAAE,CAAC,CACd,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAC,CAAC,AACtB,kBAAkB,CAAE,IAAI,CACxB,UAAU,CAAE,IAAI,CAChB,gBAAgB,CAAE,IAAI,CACtB,MAAM,CAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CACzB,IAAI,CAAE,OAAO,CACb,KAAK,CAAE,YAAY,CACnB,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,MAAM,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,YAAY,CAC9B,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,WAAW,QAAQ,CAAC,AACjC,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,UAAU,gBAAC,aAAa,AAAC,CAAC,AACnC,YAAY,CAAE,CAAC,AACjB,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,UAAU,gBAAC,QAAQ,AAAC,CAAC,AAC9B,gBAAgB,CAAE,GAAG,AACvB,CAAC"
}