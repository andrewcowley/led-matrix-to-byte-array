{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Button.svelte",
    "../Grid.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Button from \"./Button.svelte\";\n  import Grid from \"./Grid.svelte\";\n  import ByteArray from \"./ByteArray.svelte\";\n</script>\n\n<style>\n  main {\n    font-family: sans-serif;\n    text-align: center;\n  }\n</style>\n\n<main>\n\t<h1>Grid of 0 or 1s</h1>\n\t\n  <Grid />\n  <ByteArray />\n</main>",
    "<script>\n  let count = 0;\n\n  function handleClick() {\n    count += 1;\n  }\n</script>\n\n<button on:click={handleClick}>\n  Clicked {count}\n  {count === 1 ? \"time\" : \"times\"}\n</button>\n\n<style>\n  button {\n    background: #ff3e00;\n    color: white;\n    border: none;\n    padding: 8px 12px;\n    border-radius: 1px;\n  }\n</style>\n",
    "<script>\n  import converter from \"hex2dec\";\n  $: grid = [\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false]\n  ];\n\n  $: byteArray = grid.map(item => {\n    const binaryNumber = item.map(value => +value).join(\"\");\n    const hexadecimalNumber = parseInt(`${binaryNumber}`, 2).toString(16);\n    console.log(hexadecimalNumber);\n    return `0x${hexadecimalNumber}`;\n  });\n</script>\n\n<style>\n  .panel {\n    line-height: 0;\n    padding: 1rem;\n    background-color: #313131;\n  }\n  input[type=\"checkbox\"] {\n    /* Add if not using autoprefixer */\n    -webkit-appearance: none;\n    appearance: none;\n    /* For iOS < 15 to remove gradient background */\n    background-color: #fff;\n    /* Not removed via appearance */\n    margin: 0 0.1rem 0.1rem 0;\n    font: inherit;\n    color: currentColor;\n    width: 1.2rem;\n    height: 1.2rem;\n    border: 1px solid currentColor;\n    border-radius: 50%;\n    transform: translateY(-0.075em);\n  }\n\n  input[type=\"checkbox\"]:last-of-type {\n    margin-right: 0;\n  }\n\n  input[type=\"checkbox\"]:checked {\n    background-color: red;\n  }\n</style>\n<main>\n<!-- checkboxes -->\n<div class=\"panel\">\n  {#each grid as g}\n    <div>\n      {#each g as a}\n        <input type=checkbox bind:checked={a}>\n      {/each}\n    </div>\n  {/each}\n</div>\n\n<!-- values -->\n<!-- <div>\n  {#each grid as g}\n    <div>\n      {#each g as a}\n        {+a}\n      {/each}\n    </div>\n  {/each}\n</div> -->\n\n<!-- hexidecimal values -->\n<h2>Byte array</h2>\n<div>\n{byteArray}\n</div>\n\n</main>"
  ],
  "names": [],
  "mappings": "AAOE,IAAI,eAAC,CAAC,AACJ,WAAW,CAAE,UAAU,CACvB,UAAU,CAAE,MAAM,AACpB,CAAC;ACID,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,aAAa,CAAE,GAAG,AACpB,CAAC;ACED,MAAM,cAAC,CAAC,AACN,WAAW,CAAE,CAAC,CACd,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,cAAC,CAAC,AAEtB,kBAAkB,CAAE,IAAI,CACxB,UAAU,CAAE,IAAI,CAEhB,gBAAgB,CAAE,IAAI,CAEtB,MAAM,CAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CACzB,IAAI,CAAE,OAAO,CACb,KAAK,CAAE,YAAY,CACnB,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,MAAM,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,YAAY,CAC9B,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,WAAW,QAAQ,CAAC,AACjC,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,UAAU,eAAC,aAAa,AAAC,CAAC,AACnC,YAAY,CAAE,CAAC,AACjB,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,UAAU,eAAC,QAAQ,AAAC,CAAC,AAC9B,gBAAgB,CAAE,GAAG,AACvB,CAAC"
}